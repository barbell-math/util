package containers

// Code generated by ../../bin/containerInterfaceTests - DO NOT EDIT.
import (
	"testing"
	"github.com/barbell-math/util/container/tests"
	"github.com/barbell-math/util/container/dynamicContainers"
)

func HashMapToMapInterfaceFactory(capacity int) dynamicContainers.Map[int, int] {
	v := generateHashMap(capacity)
	var rv dynamicContainers.Map[int, int] = &v
	return rv
}

func TestHashMap_DynMapInterfaceSyncableInterface(t *testing.T) {
	tests.DynMapInterfaceSyncableInterface(HashMapToMapInterfaceFactory, t)
}

func TestHashMap_DynMapInterfaceAddressableInterface(t *testing.T) {
	tests.DynMapInterfaceAddressableInterface(HashMapToMapInterfaceFactory, t)
}

func TestHashMap_DynMapInterfaceLengthInterface(t *testing.T) {
	tests.DynMapInterfaceLengthInterface(HashMapToMapInterfaceFactory, t)
}

func TestHashMap_DynMapInterfaceClearInterface(t *testing.T) {
	tests.DynMapInterfaceClearInterface(HashMapToMapInterfaceFactory, t)
}

func TestHashMap_DynMapInterfaceWriteKeyedOpsInterface(t *testing.T) {
	tests.DynMapInterfaceWriteKeyedOpsInterface(HashMapToMapInterfaceFactory, t)
}

func TestHashMap_DynMapInterfaceReadOpsInterface(t *testing.T) {
	tests.DynMapInterfaceReadOpsInterface(HashMapToMapInterfaceFactory, t)
}

func TestHashMap_DynMapInterfaceReadKeyedOpsInterface(t *testing.T) {
	tests.DynMapInterfaceReadKeyedOpsInterface(HashMapToMapInterfaceFactory, t)
}

func TestHashMap_DynMapInterfaceDeleteOpsInterface(t *testing.T) {
	tests.DynMapInterfaceDeleteOpsInterface(HashMapToMapInterfaceFactory, t)
}

func TestHashMap_DynMapInterfaceDeleteKeyedOpsInterface(t *testing.T) {
	tests.DynMapInterfaceDeleteKeyedOpsInterface(HashMapToMapInterfaceFactory, t)
}

func TestHashMap_ReadDynMapInterface(t *testing.T) {
	tests.ReadDynMapInterface(HashMapToMapInterfaceFactory, t)
}

func TestHashMap_WriteDynMapInterface(t *testing.T) {
	tests.WriteDynMapInterface(HashMapToMapInterfaceFactory, t)
}

func TestHashMap_DynMapInterfaceInterface(t *testing.T) {
	tests.DynMapInterfaceInterface(HashMapToMapInterfaceFactory, t)
}

func TestHashMap_DynMapInterfaceStaticCapacityInterface(t *testing.T) {
	tests.DynMapInterfaceStaticCapacityInterface(HashMapToMapInterfaceFactory, t)
}

func TestHashMap_DynMapInterfaceGet(t *testing.T) {
	tests.DynMapInterfaceGet(HashMapToMapInterfaceFactory, t)
}

func TestHashMap_DynMapInterfaceGetPntr(t *testing.T) {
	tests.DynMapInterfaceGetPntr(HashMapToMapInterfaceFactory, t)
}

func TestHashMap_DynMapInterfaceSet(t *testing.T) {
	tests.DynMapInterfaceSet(HashMapToMapInterfaceFactory, t)
}

func TestHashMap_DynMapInterfaceContains(t *testing.T) {
	tests.DynMapInterfaceContains(HashMapToMapInterfaceFactory, t)
}

func TestHashMap_DynMapInterfaceContainsPntr(t *testing.T) {
	tests.DynMapInterfaceContainsPntr(HashMapToMapInterfaceFactory, t)
}

func TestHashMap_DynMapInterfaceKeyOf(t *testing.T) {
	tests.DynMapInterfaceKeyOf(HashMapToMapInterfaceFactory, t)
}

func TestHashMap_DynMapInterfaceKeyOfPntr(t *testing.T) {
	tests.DynMapInterfaceKeyOfPntr(HashMapToMapInterfaceFactory, t)
}

func TestHashMap_DynMapInterfacePop(t *testing.T) {
	tests.DynMapInterfacePop(HashMapToMapInterfaceFactory, t)
}

func TestHashMap_DynMapInterfacePopPntr(t *testing.T) {
	tests.DynMapInterfacePopPntr(HashMapToMapInterfaceFactory, t)
}

func TestHashMap_DynMapInterfaceDelete(t *testing.T) {
	tests.DynMapInterfaceDelete(HashMapToMapInterfaceFactory, t)
}

func TestHashMap_DynMapInterfaceClear(t *testing.T) {
	tests.DynMapInterfaceClear(HashMapToMapInterfaceFactory, t)
}

func TestHashMap_DynMapInterfaceKeys(t *testing.T) {
	tests.DynMapInterfaceKeys(HashMapToMapInterfaceFactory, t)
}

func TestHashMap_DynMapInterfaceVals(t *testing.T) {
	tests.DynMapInterfaceVals(HashMapToMapInterfaceFactory, t)
}

func TestHashMap_DynMapInterfaceValPntrs(t *testing.T) {
	tests.DynMapInterfaceValPntrs(HashMapToMapInterfaceFactory, t)
}

func TestHashMap_HashDynMapInterfaceKeyedEq(t *testing.T) {
	tests.HashDynMapInterfaceKeyedEq(HashMapToMapInterfaceFactory, t)
}
