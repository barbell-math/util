package containers

// Code generated by ../../bin/containerInterfaceTests - DO NOT EDIT.
import (
	"github.com/barbell-math/util/container/staticContainers"
	"github.com/barbell-math/util/container/tests"
	"testing"
)

func CircularBufferToSetInterfaceFactory(capacity int) staticContainers.Set[int] {
	v := generateCircularBuffer(capacity)
	var rv staticContainers.Set[int] = &v
	return rv
}

func TestCircularBuffer_StaticSetInterfaceStaticCapacity(t *testing.T) {
	tests.StaticSetInterfaceStaticCapacity(CircularBufferToSetInterfaceFactory, t)
}

func TestCircularBuffer_StaticSetInterfaceLengthInterface(t *testing.T) {
	tests.StaticSetInterfaceLengthInterface(CircularBufferToSetInterfaceFactory, t)
}

func TestCircularBuffer_StaticSetInterfaceClearInterface(t *testing.T) {
	tests.StaticSetInterfaceClearInterface(CircularBufferToSetInterfaceFactory, t)
}

func TestCircularBuffer_StaticSetInterfaceWriteUniqueOpsInterface(t *testing.T) {
	tests.StaticSetInterfaceWriteUniqueOpsInterface(CircularBufferToSetInterfaceFactory, t)
}

func TestCircularBuffer_StaticSetInterfaceReadOpsInterface(t *testing.T) {
	tests.StaticSetInterfaceReadOpsInterface(CircularBufferToSetInterfaceFactory, t)
}

func TestCircularBuffer_StaticSetInterfaceDeleteOpsInterface(t *testing.T) {
	tests.StaticSetInterfaceDeleteOpsInterface(CircularBufferToSetInterfaceFactory, t)
}

func TestCircularBuffer_ReadStaticSetInterface(t *testing.T) {
	tests.ReadStaticSetInterface(CircularBufferToSetInterfaceFactory, t)
}

func TestCircularBuffer_WriteStaticSetInterface(t *testing.T) {
	tests.WriteStaticSetInterface(CircularBufferToSetInterfaceFactory, t)
}

func TestCircularBuffer_StaticSetInterfaceInterface(t *testing.T) {
	tests.StaticSetInterfaceInterface(CircularBufferToSetInterfaceFactory, t)
}

func TestCircularBuffer_StaticSetInterfaceVals(t *testing.T) {
	tests.StaticSetInterfaceVals(CircularBufferToSetInterfaceFactory, t)
}

func TestCircularBuffer_StaticSetInterfaceValPntrs(t *testing.T) {
	tests.StaticSetInterfaceValPntrs(CircularBufferToSetInterfaceFactory, t)
}

func TestCircularBuffer_StaticSetInterfaceContainsPntr(t *testing.T) {
	tests.StaticSetInterfaceContainsPntr(CircularBufferToSetInterfaceFactory, t)
}

func TestCircularBuffer_StaticSetInterfaceGetUnique(t *testing.T) {
	tests.StaticSetInterfaceGetUnique(CircularBufferToSetInterfaceFactory, t)
}

func TestCircularBuffer_StaticSetInterfaceContains(t *testing.T) {
	tests.StaticSetInterfaceContains(CircularBufferToSetInterfaceFactory, t)
}

func TestCircularBuffer_StaticSetInterfaceClear(t *testing.T) {
	tests.StaticSetInterfaceClear(CircularBufferToSetInterfaceFactory, t)
}

func TestCircularBuffer_StaticSetInterfaceAppendUnique(t *testing.T) {
	tests.StaticSetInterfaceAppendUnique(CircularBufferToSetInterfaceFactory, t)
}

func TestCircularBuffer_StaticSetInterfaceUpdateUnique(t *testing.T) {
	tests.StaticSetInterfaceUpdateUnique(CircularBufferToSetInterfaceFactory, t)
}

func TestCircularBuffer_StaticSetInterfacePop(t *testing.T) {
	tests.StaticSetInterfacePop(CircularBufferToSetInterfaceFactory, t)
}

func TestCircularBuffer_StaticSetInterfaceUnorderedEq(t *testing.T) {
	tests.StaticSetInterfaceUnorderedEq(CircularBufferToSetInterfaceFactory, t)
}

func TestCircularBuffer_StaticSetInterfaceIntersection(t *testing.T) {
	tests.StaticSetInterfaceIntersection(CircularBufferToSetInterfaceFactory, t)
}

func TestCircularBuffer_StaticSetInterfaceUnion(t *testing.T) {
	tests.StaticSetInterfaceUnion(CircularBufferToSetInterfaceFactory, t)
}

func TestCircularBuffer_StaticSetInterfaceDifference(t *testing.T) {
	tests.StaticSetInterfaceDifference(CircularBufferToSetInterfaceFactory, t)
}

func TestCircularBuffer_StaticSetInterfaceIsSuperset(t *testing.T) {
	tests.StaticSetInterfaceIsSuperset(CircularBufferToSetInterfaceFactory, t)
}

func TestCircularBuffer_StaticSetInterfaceIsSubset(t *testing.T) {
	tests.StaticSetInterfaceIsSubset(CircularBufferToSetInterfaceFactory, t)
}
