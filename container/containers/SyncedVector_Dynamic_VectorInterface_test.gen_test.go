package containers

// Code generated by ../../bin/containerInterfaceTests - DO NOT EDIT.
import (
	"testing"
	"github.com/barbell-math/util/container/tests"
	"github.com/barbell-math/util/container/dynamicContainers"
)

func SyncedVectorToVectorInterfaceFactory(capacity int) dynamicContainers.Vector[int] {
	v := generateSyncedVector(capacity)
	var rv dynamicContainers.Vector[int] = &v
	return rv
}

func TestSyncedVector_DynVectorInterfaceSyncableInterface(t *testing.T) {
	tests.DynVectorInterfaceSyncableInterface(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceAddressableInterface(t *testing.T) {
	tests.DynVectorInterfaceAddressableInterface(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceLengthInterface(t *testing.T) {
	tests.DynVectorInterfaceLengthInterface(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceCapacityInterface(t *testing.T) {
	tests.DynVectorInterfaceCapacityInterface(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceClearInterface(t *testing.T) {
	tests.DynVectorInterfaceClearInterface(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceWriteOpsInterface(t *testing.T) {
	tests.DynVectorInterfaceWriteOpsInterface(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceWriteKeyedOpsInterface(t *testing.T) {
	tests.DynVectorInterfaceWriteKeyedOpsInterface(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceWriteKeyedSequentialOpsInterface(t *testing.T) {
	tests.DynVectorInterfaceWriteKeyedSequentialOpsInterface(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceWriteDynKeyedOpsInterface(t *testing.T) {
	tests.DynVectorInterfaceWriteDynKeyedOpsInterface(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceReadOpsInterface(t *testing.T) {
	tests.DynVectorInterfaceReadOpsInterface(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceReadKeyedOpsInterface(t *testing.T) {
	tests.DynVectorInterfaceReadKeyedOpsInterface(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceDeleteOpsInterface(t *testing.T) {
	tests.DynVectorInterfaceDeleteOpsInterface(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceDeleteKeyedOpsInterface(t *testing.T) {
	tests.DynVectorInterfaceDeleteKeyedOpsInterface(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceDeleteSequentialOpsInterface(t *testing.T) {
	tests.DynVectorInterfaceDeleteSequentialOpsInterface(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceDeleteKeyedSequentialOpsInterface(t *testing.T) {
	tests.DynVectorInterfaceDeleteKeyedSequentialOpsInterface(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_ReadDynVectorInterface(t *testing.T) {
	tests.ReadDynVectorInterface(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_WriteDynVectorInterface(t *testing.T) {
	tests.WriteDynVectorInterface(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceInterface(t *testing.T) {
	tests.DynVectorInterfaceInterface(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceStaticCapacityInterface(t *testing.T) {
	tests.DynVectorInterfaceStaticCapacityInterface(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceGet(t *testing.T) {
	tests.DynVectorInterfaceGet(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceGetPntr(t *testing.T) {
	tests.DynVectorInterfaceGetPntr(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceContains(t *testing.T) {
	tests.DynVectorInterfaceContains(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceContainsPntr(t *testing.T) {
	tests.DynVectorInterfaceContainsPntr(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceKeyOf(t *testing.T) {
	tests.DynVectorInterfaceKeyOf(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceKeyOfPntr(t *testing.T) {
	tests.DynVectorInterfaceKeyOfPntr(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceSet(t *testing.T) {
	tests.DynVectorInterfaceSet(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceSetSequential(t *testing.T) {
	tests.DynVectorInterfaceSetSequential(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceAppend(t *testing.T) {
	tests.DynVectorInterfaceAppend(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceInsert(t *testing.T) {
	tests.DynVectorInterfaceInsert(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceInsertSequential(t *testing.T) {
	tests.DynVectorInterfaceInsertSequential(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfacePopSequential(t *testing.T) {
	tests.DynVectorInterfacePopSequential(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfacePop(t *testing.T) {
	tests.DynVectorInterfacePop(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfacePopPntr(t *testing.T) {
	tests.DynVectorInterfacePopPntr(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceDelete(t *testing.T) {
	tests.DynVectorInterfaceDelete(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceDeleteSequential(t *testing.T) {
	tests.DynVectorInterfaceDeleteSequential(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceClear(t *testing.T) {
	tests.DynVectorInterfaceClear(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceVals(t *testing.T) {
	tests.DynVectorInterfaceVals(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceValPntrs(t *testing.T) {
	tests.DynVectorInterfaceValPntrs(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceKeys(t *testing.T) {
	tests.DynVectorInterfaceKeys(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceKeyedEq(t *testing.T) {
	tests.DynVectorInterfaceKeyedEq(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceUnorderedEq(t *testing.T) {
	tests.DynVectorInterfaceUnorderedEq(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceIntersection(t *testing.T) {
	tests.DynVectorInterfaceIntersection(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceUnion(t *testing.T) {
	tests.DynVectorInterfaceUnion(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceDifference(t *testing.T) {
	tests.DynVectorInterfaceDifference(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceIsSuperset(t *testing.T) {
	tests.DynVectorInterfaceIsSuperset(SyncedVectorToVectorInterfaceFactory, t)
}

func TestSyncedVector_DynVectorInterfaceIsSubset(t *testing.T) {
	tests.DynVectorInterfaceIsSubset(SyncedVectorToVectorInterfaceFactory, t)
}
