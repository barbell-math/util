package containers

// Code generated by ../../bin/containerInterfaceTests - DO NOT EDIT.
import (
	"testing"
	"github.com/barbell-math/util/container/tests"
	"github.com/barbell-math/util/container/dynamicContainers"
)

func SyncedHashSetToSetInterfaceFactory(capacity int) dynamicContainers.Set[int] {
	v := generateSyncedHashSet(capacity)
	var rv dynamicContainers.Set[int] = &v
	return rv
}

func TestSyncedHashSet_DynSetInterfaceSyncableInterface(t *testing.T) {
	tests.DynSetInterfaceSyncableInterface(SyncedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHashSet_DynSetInterfaceAddressableInterface(t *testing.T) {
	tests.DynSetInterfaceAddressableInterface(SyncedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHashSet_DynSetInterfaceLengthInterface(t *testing.T) {
	tests.DynSetInterfaceLengthInterface(SyncedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHashSet_DynSetInterfaceClearInterface(t *testing.T) {
	tests.DynSetInterfaceClearInterface(SyncedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHashSet_DynSetInterfaceWriteUniqueOpsInterface(t *testing.T) {
	tests.DynSetInterfaceWriteUniqueOpsInterface(SyncedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHashSet_DynSetInterfaceReadOpsInterface(t *testing.T) {
	tests.DynSetInterfaceReadOpsInterface(SyncedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHashSet_DynSetInterfaceDeleteOpsInterface(t *testing.T) {
	tests.DynSetInterfaceDeleteOpsInterface(SyncedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHashSet_ReadDynSetInterface(t *testing.T) {
	tests.ReadDynSetInterface(SyncedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHashSet_WriteDynSetInterface(t *testing.T) {
	tests.WriteDynSetInterface(SyncedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHashSet_DynSetInterfaceInterface(t *testing.T) {
	tests.DynSetInterfaceInterface(SyncedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHashSet_DynSetInterfaceStaticCapacityInterface(t *testing.T) {
	tests.DynSetInterfaceStaticCapacityInterface(SyncedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHashSet_DynSetInterfaceVals(t *testing.T) {
	tests.DynSetInterfaceVals(SyncedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHashSet_DynSetInterfaceValPntrs(t *testing.T) {
	tests.DynSetInterfaceValPntrs(SyncedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHashSet_DynSetInterfaceContainsPntr(t *testing.T) {
	tests.DynSetInterfaceContainsPntr(SyncedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHashSet_DynSetInterfaceGetUnique(t *testing.T) {
	tests.DynSetInterfaceGetUnique(SyncedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHashSet_DynSetInterfaceContains(t *testing.T) {
	tests.DynSetInterfaceContains(SyncedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHashSet_DynSetInterfaceClear(t *testing.T) {
	tests.DynSetInterfaceClear(SyncedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHashSet_DynSetInterfaceAppendUnique(t *testing.T) {
	tests.DynSetInterfaceAppendUnique(SyncedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHashSet_DynSetInterfaceUpdateUnique(t *testing.T) {
	tests.DynSetInterfaceUpdateUnique(SyncedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHashSet_DynSetInterfacePop(t *testing.T) {
	tests.DynSetInterfacePop(SyncedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHashSet_DynSetInterfacePopPntr(t *testing.T) {
	tests.DynSetInterfacePopPntr(SyncedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHashSet_DynSetInterfaceUnorderedEq(t *testing.T) {
	tests.DynSetInterfaceUnorderedEq(SyncedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHashSet_DynSetInterfaceIntersection(t *testing.T) {
	tests.DynSetInterfaceIntersection(SyncedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHashSet_DynSetInterfaceUnion(t *testing.T) {
	tests.DynSetInterfaceUnion(SyncedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHashSet_DynSetInterfaceDifference(t *testing.T) {
	tests.DynSetInterfaceDifference(SyncedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHashSet_DynSetInterfaceIsSuperset(t *testing.T) {
	tests.DynSetInterfaceIsSuperset(SyncedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHashSet_DynSetInterfaceIsSubset(t *testing.T) {
	tests.DynSetInterfaceIsSubset(SyncedHashSetToSetInterfaceFactory, t)
}
