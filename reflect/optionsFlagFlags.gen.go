package reflect

// Code generated by ../bin/flags - DO NOT EDIT.

// Returns the supplied flags status
func (o optionsFlag) GetFlag(flag optionsFlag) bool {
	return o&flag > 0
}

// Description: set to true if the hash value should be calculated by
// following pointer values rather than using the pointers value itself
//
// Used by: [ToStructs]
//
// Default: true
//
//gen:enum string followPntrs
func (o optionsFlag) FollowPntrs(b bool) optionsFlag {
	if b {
		o |= followPntrs
	} else {
		o &= ^followPntrs
	}
	return o
}

// Description: set to true if the hash value should be calculated by
// following interface values rather than using the interface value itself
//
// Used by: [ToStructs]
//
// Default: true
//
//gen:enum string followInterface
func (o optionsFlag) FollowInterface(b bool) optionsFlag {
	if b {
		o |= followInterface
	} else {
		o &= ^followInterface
	}
	return o
}

// Description: set to true to include map key value pairs in the hash
// calculation
//
// Used by: [ToStructs]
//
// Default: true
//
//gen:enum string includeMapVals
func (o optionsFlag) IncludeMapVals(b bool) optionsFlag {
	if b {
		o |= includeMapVals
	} else {
		o &= ^includeMapVals
	}
	return o
}

// Description: set to true to include slice values in the hash calculation
//
// Used by: [ToStructs]
//
// Default: true
//
//gen:enum string includeSliceVals
func (o optionsFlag) IncludeSliceVals(b bool) optionsFlag {
	if b {
		o |= includeSliceVals
	} else {
		o &= ^includeSliceVals
	}
	return o
}

// Description: set to true to include array values in the hash
// calculation
//
// Used by: [ToStructs]
//
// Default: true
//
//gen:enum string includeArrayVals
func (o optionsFlag) IncludeArrayVals(b bool) optionsFlag {
	if b {
		o |= includeArrayVals
	} else {
		o &= ^includeArrayVals
	}
	return o
}
