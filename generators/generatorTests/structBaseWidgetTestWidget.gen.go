package generatortests

// Code generated by ../../bin/structBaseWidget - DO NOT EDIT.

import (
	"github.com/barbell-math/util/src/hash"
	"github.com/barbell-math/util/src/widgets"
)

// Returns true if l equals r using the widgets associated with the following
// fields:
//   - value1
//   - value2
//   - value3
func (_ *structBaseWidgetTest) Eq(l *structBaseWidgetTest, r *structBaseWidgetTest) bool {
	var (
		value1Widget widgets.BuiltinString
		value2Widget testCustomWidget
		value3Widget testCustomWidget
		rv           bool = true
	)

	rv = rv && value1Widget.Eq(&l.value1, &r.value1)
	rv = rv && value2Widget.Eq(&l.value2, &r.value2)
	rv = rv && value3Widget.Eq(&l.value3, &r.value3)
	return rv
}

// Returns a hash that represents other by calling [hash.CombineIgnoreZero] with
// the values generated from using the widgets associated with the following
// fields:
//   - value1
//   - value2
//   - value3
func (_ *structBaseWidgetTest) Hash(other *structBaseWidgetTest) hash.Hash {
	var (
		value1Widget widgets.BuiltinString
		value2Widget testCustomWidget
		value3Widget testCustomWidget
		rv           hash.Hash
	)

	rv = rv.CombineIgnoreZero(value1Widget.Hash(&other.value1))
	rv = rv.CombineIgnoreZero(value2Widget.Hash(&other.value2))
	rv = rv.CombineIgnoreZero(value3Widget.Hash(&other.value3))
	return rv
}

// Zeros the following fields in the struct using the widgets associated with
// the following fields:
//   - value1
//   - value2
//   - value3
func (_ *structBaseWidgetTest) Zero(other *structBaseWidgetTest) {
	var (
		value1Widget widgets.BuiltinString
		value2Widget testCustomWidget
		value3Widget testCustomWidget
	)

	value1Widget.Zero(&other.value1)
	value2Widget.Zero(&other.value2)
	value3Widget.Zero(&other.value3)
}
