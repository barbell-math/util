package generatortests

// Code generated by ../../bin/passThroughWidget - DO NOT EDIT.

import (
	"github.com/barbell-math/util/src/hash"
	"github.com/barbell-math/util/src/widgets"
)

// Returns true if l equals r. Uses the Eq operator provided by the
// widgets.BuiltinInt widget internally.
func (_ *PassThroughWidgetPartialOrderTest) Eq(
	l *PassThroughWidgetPartialOrderTest,
	r *PassThroughWidgetPartialOrderTest,
) bool {
	var tmp widgets.BuiltinInt
	return tmp.Eq((*int)(l), (*int)(r))
}

// Returns a hash to represent other. The hash that is returned will be supplied
// by the widgets.BuiltinInt widget internally.
func (_ *PassThroughWidgetPartialOrderTest) Hash(
	other *PassThroughWidgetPartialOrderTest,
) hash.Hash {
	var tmp widgets.BuiltinInt
	return tmp.Hash((*int)(other))
}

// Zeros the supplied value. The operation that is performed will be determined
// by the widgets.BuiltinInt widget internally.
func (_ *PassThroughWidgetPartialOrderTest) Zero(
	other *PassThroughWidgetPartialOrderTest,
) {
	var tmp widgets.BuiltinInt
	tmp.Zero((*int)(other))
}

// Returns true if l is less than r. Uses the Lt operator provided by the
// widgets.BuiltinInt widget internally.
func (_ *PassThroughWidgetPartialOrderTest) Lt(
	l *PassThroughWidgetPartialOrderTest,
	r *PassThroughWidgetPartialOrderTest,
) bool {
	var tmp widgets.BuiltinInt
	return tmp.Lt((*int)(l), (*int)(r))
}
