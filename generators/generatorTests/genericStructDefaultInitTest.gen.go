package generatortests

// Code generated by ../../bin/structDefaultInit - DO NOT EDIT.
import (
	"github.com/barbell-math/util/src/generics"
)

// Returns a new genericStructDefaultInitTest struct initialized with the default values.
func NewGenericStructDefaultInitTest[T ~int, U any]() genericStructDefaultInitTest[T, U] {
	return genericStructDefaultInitTest[T, U]{
		field1: generics.ZeroVal[T](),
		field2: generics.ZeroVal[U](),
	}
}

// Tests adding getter and setter with a generic type
//
//gen:structDefaultInit default generics.ZeroVal[U]()
//gen:structDefaultInit imports github.com/barbell-math/util/src/generics
//gen:structDefaultInit getter
//gen:structDefaultInit setter
func (o *genericStructDefaultInitTest[T, U]) SetField2(v U) *genericStructDefaultInitTest[T, U] {
	o.field2 = v
	return o
}

// Tests adding getter and setter with a generic type
//
//gen:structDefaultInit default generics.ZeroVal[U]()
//gen:structDefaultInit imports github.com/barbell-math/util/src/generics
//gen:structDefaultInit getter
//gen:structDefaultInit setter
func (o *genericStructDefaultInitTest[T, U]) GetField2() U {
	return o.field2
}
