package generatortests

// Code generated by ../../bin/structDefaultInit - DO NOT EDIT.
import (
	"fmt"
)

// Returns a new structDefaultInitTest struct initialized with the default values.
func NewStructDefaultInitTest() structDefaultInitTest {
	return structDefaultInitTest{
		field1: 3,
		field2: structDefaultInitTest{},
		field3: 3,
		field4: structDefaultInitTest{},
		field5: nil,
	}
}

// Tests adding a getter and setter
//
//gen:structDefaultInit default 3
//gen:structDefaultInit setter
//gen:structDefaultInit getter
func (o *structDefaultInitTest) SetField3(v float32) *structDefaultInitTest {
	o.field3 = v
	return o
}

// Tests when duplicate import paths are provided
//
//gen:structDefaultInit default structDefaultInitTest{}
//gen:structDefaultInit setter
//gen:structDefaultInit getter
//gen:structDefaultInit imports fmt
func (o *structDefaultInitTest) SetField4(v fmt.Stringer) *structDefaultInitTest {
	o.field4 = v
	return o
}

// Tests a field that is a pointer
//
//gen:structDefaultInit default nil
//gen:structDefaultInit setter
//gen:structDefaultInit getter
func (o *structDefaultInitTest) SetField5(v *int) *structDefaultInitTest {
	o.field5 = v
	return o
}

// Tests adding a getter and setter
//
//gen:structDefaultInit default 3
//gen:structDefaultInit setter
//gen:structDefaultInit getter
func (o *structDefaultInitTest) GetField3() float32 {
	return o.field3
}

// Tests when duplicate import paths are provided
//
//gen:structDefaultInit default structDefaultInitTest{}
//gen:structDefaultInit setter
//gen:structDefaultInit getter
//gen:structDefaultInit imports fmt
func (o *structDefaultInitTest) GetField4() fmt.Stringer {
	return o.field4
}

// Tests a field that is a pointer
//
//gen:structDefaultInit default nil
//gen:structDefaultInit setter
//gen:structDefaultInit getter
func (o *structDefaultInitTest) GetField5() *int {
	return o.field5
}
