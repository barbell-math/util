package argparse

// Code generated by ../bin/structDefaultInit - DO NOT EDIT.
import (
	"github.com/barbell-math/util/argparse/translators"
	"github.com/barbell-math/util/generics"
)

// Returns a new opts struct initialized with the default values.
func NewOpts[T any, U translators.Translater[T]]() *opts[T, U] {
	return &opts[T, U]{
		argType:     ValueArgType,
		shortName:   byte(0),
		required:    false,
		description: "",
		defaultVal:  generics.ZeroVal[T](),
		translator:  generics.ZeroVal[U](),
	}
}

func (o *opts[T, U]) SetArgType(v ArgType) *opts[T, U] {
	o.argType = v
	return o
}

func (o *opts[T, U]) SetShortName(v byte) *opts[T, U] {
	o.shortName = v
	return o
}

func (o *opts[T, U]) SetRequired(v bool) *opts[T, U] {
	o.required = v
	return o
}

func (o *opts[T, U]) SetDescription(v string) *opts[T, U] {
	o.description = v
	return o
}

func (o *opts[T, U]) SetDefaultVal(v T) *opts[T, U] {
	o.defaultVal = v
	return o
}

func (o *opts[T, U]) SetTranslator(v U) *opts[T, U] {
	o.translator = v
	return o
}

func (o *opts[T, U]) GetArgType() ArgType {
	return o.argType
}

func (o *opts[T, U]) GetShortName() byte {
	return o.shortName
}

func (o *opts[T, U]) GetRequired() bool {
	return o.required
}

func (o *opts[T, U]) GetDescription() string {
	return o.description
}

func (o *opts[T, U]) GetDefaultVal() T {
	return o.defaultVal
}

func (o *opts[T, U]) GetTranslator() U {
	return o.translator
}
