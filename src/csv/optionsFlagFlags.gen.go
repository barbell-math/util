package csv

// Code generated by ../../bin/flags - DO NOT EDIT.

// Returns the supplied flags status
func (o optionsFlag) GetFlag(flag optionsFlag) bool {
	return o&flag > 0
}

// Description: set to true if the incoming iterator stream has
// headers in the first row
//
// Used by: [ToStructs]
//
// Default: true
//
//gen:enum string hasHeaders
func (o optionsFlag) HasHeaders(b bool) optionsFlag {
	if b {
		o |= hasHeaders
	} else {
		o &= ^hasHeaders
	}
	return o
}

// Description: set to true to skip the headers from the incoming
// iterator stream and instead determine field ordering by the order of
// the fields in the struct.
//
// Used by: [ToStructs]
//
// Default: false
//
//gen:enum string ignoreHeaders
func (o optionsFlag) IgnoreHeaders(b bool) optionsFlag {
	if b {
		o |= ignoreHeaders
	} else {
		o &= ^ignoreHeaders
	}
	return o
}

// Description: set to true to use struct field tags instead of the
// field name when a tag is present and has the same name as defined by
// the structTagName option
//
// Used by: [ToStructs], [FromStructs]
//
// Default: true
//
//gen:enum string useStructTags
func (o optionsFlag) UseStructTags(b bool) optionsFlag {
	if b {
		o |= useStructTags
	} else {
		o &= ^useStructTags
	}
	return o
}

// Description: set to true to write the headers to the file
//
// Used by: [FromStructs]
//
// Default: true
//
//gen:enum string writeHeaders
func (o optionsFlag) WriteHeaders(b bool) optionsFlag {
	if b {
		o |= writeHeaders
	} else {
		o &= ^writeHeaders
	}
	return o
}

// Description: whether or not to write zero-values to the csv file. If false,
// any zero values will be left as blank fields.
//
// Used by: [FromStructs]
//
// Default: false
//
//gen:enum string writeZeroValues
func (o optionsFlag) WriteZeroValues(b bool) optionsFlag {
	if b {
		o |= writeZeroValues
	} else {
		o &= ^writeZeroValues
	}
	return o
}
