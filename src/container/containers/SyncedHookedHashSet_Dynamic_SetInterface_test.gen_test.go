package containers

// Code generated by ../../../bin/containerInterfaceTests - DO NOT EDIT.
import (
	"github.com/barbell-math/util/src/container/dynamicContainers"
	"github.com/barbell-math/util/src/container/tests"
	"testing"
)

func SyncedHookedHashSetToSetInterfaceFactory(capacity int) dynamicContainers.Set[int] {
	v := generateSyncedHookedHashSet(capacity)
	var rv dynamicContainers.Set[int] = &v
	return rv
}

func TestSyncedHookedHashSet_DynSetInterfaceSyncableInterface(t *testing.T) {
	tests.DynSetInterfaceSyncableInterface(SyncedHookedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHookedHashSet_DynSetInterfaceAddressableInterface(t *testing.T) {
	tests.DynSetInterfaceAddressableInterface(SyncedHookedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHookedHashSet_DynSetInterfaceLengthInterface(t *testing.T) {
	tests.DynSetInterfaceLengthInterface(SyncedHookedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHookedHashSet_DynSetInterfaceClearInterface(t *testing.T) {
	tests.DynSetInterfaceClearInterface(SyncedHookedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHookedHashSet_DynSetInterfaceWriteUniqueOpsInterface(t *testing.T) {
	tests.DynSetInterfaceWriteUniqueOpsInterface(SyncedHookedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHookedHashSet_DynSetInterfaceReadOpsInterface(t *testing.T) {
	tests.DynSetInterfaceReadOpsInterface(SyncedHookedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHookedHashSet_DynSetInterfaceDeleteOpsInterface(t *testing.T) {
	tests.DynSetInterfaceDeleteOpsInterface(SyncedHookedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHookedHashSet_ReadDynSetInterface(t *testing.T) {
	tests.ReadDynSetInterface(SyncedHookedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHookedHashSet_WriteDynSetInterface(t *testing.T) {
	tests.WriteDynSetInterface(SyncedHookedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHookedHashSet_DynSetInterfaceInterface(t *testing.T) {
	tests.DynSetInterfaceInterface(SyncedHookedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHookedHashSet_DynSetInterfaceStaticCapacityInterface(t *testing.T) {
	tests.DynSetInterfaceStaticCapacityInterface(SyncedHookedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHookedHashSet_DynSetInterfaceVals(t *testing.T) {
	tests.DynSetInterfaceVals(SyncedHookedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHookedHashSet_DynSetInterfaceValPntrs(t *testing.T) {
	tests.DynSetInterfaceValPntrs(SyncedHookedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHookedHashSet_DynSetInterfaceContainsPntr(t *testing.T) {
	tests.DynSetInterfaceContainsPntr(SyncedHookedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHookedHashSet_DynSetInterfaceGetUnique(t *testing.T) {
	tests.DynSetInterfaceGetUnique(SyncedHookedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHookedHashSet_DynSetInterfaceContains(t *testing.T) {
	tests.DynSetInterfaceContains(SyncedHookedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHookedHashSet_DynSetInterfaceClear(t *testing.T) {
	tests.DynSetInterfaceClear(SyncedHookedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHookedHashSet_DynSetInterfaceAppendUnique(t *testing.T) {
	tests.DynSetInterfaceAppendUnique(SyncedHookedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHookedHashSet_DynSetInterfaceUpdateUnique(t *testing.T) {
	tests.DynSetInterfaceUpdateUnique(SyncedHookedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHookedHashSet_DynSetInterfacePop(t *testing.T) {
	tests.DynSetInterfacePop(SyncedHookedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHookedHashSet_DynSetInterfacePopPntr(t *testing.T) {
	tests.DynSetInterfacePopPntr(SyncedHookedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHookedHashSet_DynSetInterfaceUnorderedEq(t *testing.T) {
	tests.DynSetInterfaceUnorderedEq(SyncedHookedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHookedHashSet_DynSetInterfaceIntersection(t *testing.T) {
	tests.DynSetInterfaceIntersection(SyncedHookedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHookedHashSet_DynSetInterfaceUnion(t *testing.T) {
	tests.DynSetInterfaceUnion(SyncedHookedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHookedHashSet_DynSetInterfaceDifference(t *testing.T) {
	tests.DynSetInterfaceDifference(SyncedHookedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHookedHashSet_DynSetInterfaceIsSuperset(t *testing.T) {
	tests.DynSetInterfaceIsSuperset(SyncedHookedHashSetToSetInterfaceFactory, t)
}

func TestSyncedHookedHashSet_DynSetInterfaceIsSubset(t *testing.T) {
	tests.DynSetInterfaceIsSubset(SyncedHookedHashSetToSetInterfaceFactory, t)
}
